[2025-07-27T10:35:48.022Z] LOG: [1m[36m
🚀 E-commerce Analytics Agent CLI
[0m
[2025-07-27T10:35:48.023Z] LOG: [34m🔍 [INIT] Starting analytics agent initialization...[0m
[2025-07-27T10:35:48.023Z] LOG: 🚀 Initializing Analytics Agent...
[2025-07-27T10:35:49.899Z] LOG: 📊 Fetching database schemas...
[2025-07-27T10:35:49.899Z] LOG: 📋 Processing 2 database(s): cortex_2_dimensions, cortex_3_facts
[2025-07-27T10:35:49.899Z] LOG: 🔍 Processing database: cortex_2_dimensions
[2025-07-27T10:35:50.494Z] LOG: 📋 Found 6 tables in cortex_2_dimensions
[2025-07-27T10:35:50.662Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_attribution (11 columns)
[2025-07-27T10:35:50.824Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_product (11 columns)
[2025-07-27T10:35:50.986Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_session (9 columns)
[2025-07-27T10:35:51.151Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_time (11 columns)
[2025-07-27T10:35:51.313Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_user (8 columns)
[2025-07-27T10:35:51.478Z] LOG: ✓ Cached schema for: cortex_2_dimensions.dim_variant (11 columns)
[2025-07-27T10:35:51.479Z] LOG: 🔍 Processing database: cortex_3_facts
[2025-07-27T10:35:51.643Z] LOG: 📋 Found 3 tables in cortex_3_facts
[2025-07-27T10:35:51.807Z] LOG: ✓ Cached schema for: cortex_3_facts.fct_page_views (6 columns)
[2025-07-27T10:35:51.972Z] LOG: ✓ Cached schema for: cortex_3_facts.fct_sales (12 columns)
[2025-07-27T10:35:52.140Z] LOG: ✓ Cached schema for: cortex_3_facts.fct_webhook_sales (10 columns)
[2025-07-27T10:35:52.140Z] LOG: 📚 Cached 9 table schemas
[2025-07-27T10:35:52.140Z] LOG: ✅ Analytics Agent initialized successfully
[2025-07-27T10:35:52.140Z] LOG: [32m✅ Analytics agent initialized successfully[0m
[2025-07-27T10:35:52.140Z] LOG: [36mℹ️  Cached 9 table schemas from databases[0m
[2025-07-27T10:35:52.140Z] LOG: [2m
📋 Available Tables:[0m
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_attribution[0m (11 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_product[0m (11 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_session[0m (9 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_time[0m (11 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_user[0m (8 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_2_dimensions.dim_variant[0m (11 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_3_facts.fct_page_views[0m (6 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_3_facts.fct_sales[0m (12 columns)
[2025-07-27T10:35:52.141Z] LOG:    [36mcortex_3_facts.fct_webhook_sales[0m (10 columns)
[2025-07-27T10:35:52.141Z] LOG: [33m
💡 Type your analytics query, or use these commands:[0m
[2025-07-27T10:35:52.141Z] LOG:    • help    - Show available commands
[2025-07-27T10:35:52.141Z] LOG:    • tables  - List all available tables
[2025-07-27T10:35:52.141Z] LOG:    • schema <table> - Show table schema
[2025-07-27T10:35:52.141Z] LOG:    • exit    - Exit the CLI

[2025-07-27T10:35:57.759Z] LOG: [33m
🔍 Processing query: "find me the top 10 products i need to restock considering, if the current inventory is less than 100, and the no of units sold inthe past 45 days is greater than 40 units"
[0m
[2025-07-27T10:35:57.759Z] LOG: [34m🔍 [VALIDATION] Validating query against database schemas...[0m
[2025-07-27T10:35:57.760Z] LOG: [34m🔍 [PROCESSING] Starting analysis with session ID: cli_1753612557759_isa16vq4i[0m
[2025-07-27T10:35:57.764Z] LOG: 📝 Step 1: Validating query...
[2025-07-27T10:35:57.765Z] LOG:    Query: "find me the top 10 products i need to restock considering, if the current inventory is less than 100, and the no of units sold inthe past 45 days is greater than 40 units"
[2025-07-27T10:36:02.706Z] LOG:    ✓ Validation result: Valid
[2025-07-27T10:36:02.706Z] LOG:    📊 Required tables: cortex_2_dimensions.dim_variant, cortex_3_facts.fct_sales, cortex_3_facts.fct_webhook_sales, cortex_2_dimensions.dim_product
[2025-07-27T10:36:02.706Z] LOG: ⚙️ Step 2: Generating optimized query...
[2025-07-27T10:36:02.707Z] LOG: 
🔍 SCHEMA DEBUG: Relevant tables for query generation:
[2025-07-27T10:36:02.707Z] LOG: 
🔍 DEBUGGING SCHEMA INFORMATION:
[2025-07-27T10:36:02.707Z] LOG: 
📋 Table: cortex_2_dimensions.dim_variant
[2025-07-27T10:36:02.707Z] LOG:    Columns (11):
[2025-07-27T10:36:02.707Z] LOG:    - shop (LowCardinality(String))
[2025-07-27T10:36:02.707Z] LOG:    - variant_id (Int64)
[2025-07-27T10:36:02.707Z] LOG:    - variant_sku (Nullable(UInt64))
[2025-07-27T10:36:02.707Z] LOG:    - product_id (Nullable(UInt64))
[2025-07-27T10:36:02.707Z] LOG:    - variant_title (String)
[2025-07-27T10:36:02.707Z] LOG:    - price (Nullable(Float64))
[2025-07-27T10:36:02.707Z] LOG:    - cost (Nullable(Float64))
[2025-07-27T10:36:02.707Z] LOG:    - currency (String)
[2025-07-27T10:36:02.707Z] LOG:    - inventory (Nullable(UInt64))
[2025-07-27T10:36:02.707Z] LOG:    - processed_at (DateTime)
[2025-07-27T10:36:02.707Z] LOG:    - ingested_at (DateTime64(3))
[2025-07-27T10:36:02.708Z] LOG: 
📋 Table: cortex_3_facts.fct_sales
[2025-07-27T10:36:02.708Z] LOG:    Columns (12):
[2025-07-27T10:36:02.708Z] LOG:    - shop (String)
[2025-07-27T10:36:02.708Z] LOG:    - hour_id (DateTime)
[2025-07-27T10:36:02.708Z] LOG:    - customer_id (Int64)
[2025-07-27T10:36:02.708Z] LOG:    - session_id (String)
[2025-07-27T10:36:02.708Z] LOG:    - attribution_id (Nullable(String))
[2025-07-27T10:36:02.708Z] LOG:    - order_id (String)
[2025-07-27T10:36:02.708Z] LOG:    - product_id (Int64)
[2025-07-27T10:36:02.708Z] LOG:    - variant_id (Int64)
[2025-07-27T10:36:02.708Z] LOG:    - amount (Nullable(Float64))
[2025-07-27T10:36:02.708Z] LOG:    - unit_price (Nullable(Float64))
[2025-07-27T10:36:02.708Z] LOG:    - total_cost (Nullable(Float64))
[2025-07-27T10:36:02.708Z] LOG:    - currency_code (String)
[2025-07-27T10:36:02.708Z] LOG: 
📋 Table: cortex_3_facts.fct_webhook_sales
[2025-07-27T10:36:02.708Z] LOG:    Columns (10):
[2025-07-27T10:36:02.708Z] LOG:    - shop (String)
[2025-07-27T10:36:02.708Z] LOG:    - hour_id (DateTime)
[2025-07-27T10:36:02.708Z] LOG:    - customer_id (Int64)
[2025-07-27T10:36:02.708Z] LOG:    - order_id (Int64)
[2025-07-27T10:36:02.709Z] LOG:    - product_id (Int64)
[2025-07-27T10:36:02.709Z] LOG:    - variant_id (Int64)
[2025-07-27T10:36:02.709Z] LOG:    - amount (Nullable(Float64))
[2025-07-27T10:36:02.709Z] LOG:    - unit_price (Nullable(Float64))
[2025-07-27T10:36:02.709Z] LOG:    - total_cost (Nullable(Float64))
[2025-07-27T10:36:02.709Z] LOG:    - currency_code (String)
[2025-07-27T10:36:02.709Z] LOG: 
📋 Table: cortex_2_dimensions.dim_product
[2025-07-27T10:36:02.709Z] LOG:    Columns (11):
[2025-07-27T10:36:02.709Z] LOG:    - shop (LowCardinality(String))
[2025-07-27T10:36:02.709Z] LOG:    - product_id (Int64)
[2025-07-27T10:36:02.709Z] LOG:    - product_title (String)
[2025-07-27T10:36:02.709Z] LOG:    - product_url (String)
[2025-07-27T10:36:02.709Z] LOG:    - product_type (String)
[2025-07-27T10:36:02.709Z] LOG:    - vendor (String)
[2025-07-27T10:36:02.709Z] LOG:    - status (String)
[2025-07-27T10:36:02.709Z] LOG:    - inventory (Nullable(UInt64))
[2025-07-27T10:36:02.709Z] LOG:    - tags (Array(String))
[2025-07-27T10:36:02.709Z] LOG:    - processed_at (DateTime)
[2025-07-27T10:36:02.709Z] LOG:    - ingested_at (DateTime64(3))
[2025-07-27T10:36:02.710Z] LOG: 

[2025-07-27T10:36:08.383Z] LOG:    🔧 Generated SQL: SELECT p.product_id, p.product_title, v.inventory, SUM(s.units_sold) AS total_units_sold
FROM (
 SELECT product_id, COUNT(*) AS units_sold
 FROM (
 SELECT product_id
 FROM cortex_3_facts.fct_sales
 WHERE hour_id >= NOW() - toIntervalDay(45)
 UNION ALL
 SELECT product_id
 FROM cortex_3_facts.fct_webhook_sales
 WHERE hour_id >= NOW() - toIntervalDay(45)
 )
 GROUP BY product_id
) AS s
JOIN cortex_2_dimensions.dim_product AS p ON CAST(s.product_id AS String) = CAST(p.product_id AS String)
JOIN cortex_2_dimensions.dim_variant AS v ON CAST(p.product_id AS String) = CAST(v.product_id AS String)
WHERE v.inventory < 100
GROUP BY p.product_id, p.product_title, v.inventory
HAVING total_units_sold > 40
ORDER BY total_units_sold DESC
LIMIT 10
[2025-07-27T10:36:08.383Z] LOG: 🔍 Step 3: Executing query and saving data...
[2025-07-27T10:36:08.384Z] LOG: 🔍 Pre-execution Query Analysis:
[2025-07-27T10:36:08.384Z] LOG: Table references found: [
  "FROM cortex_3_facts.fct_sales",
  "FROM cortex_3_facts.fct_webhook_sales",
  "JOIN cortex_2_dimensions.dim_product",
  "JOIN cortex_2_dimensions.dim_variant"
]
[2025-07-27T10:36:08.385Z] LOG: Pre-validation issues found: 1
[2025-07-27T10:36:08.385Z] LOG: ⚠️  Pre-execution validation found issues: [
  "ERROR: inventory column referenced from fct_sales table - inventory is only in dim_variant"
]
[2025-07-27T10:36:08.385Z] LOG: 🔍 Executing query: SELECT p.product_id, p.product_title, v.inventory, SUM(s.units_sold) AS total_units_sold
FROM (
 SELECT product_id, COUNT(*) AS units_sold
 FROM (
 SELECT product_id
 FROM cortex_3_facts.fct_sales
 WHERE hour_id >= NOW() - toIntervalDay(45)
 UNION ALL
 SELECT product_id
 FROM cortex_3_facts.fct_webhook_sales
 WHERE hour_id >= NOW() - toIntervalDay(45)
 )
 GROUP BY product_id
) AS s
JOIN cortex_2_dimensions.dim_product AS p ON CAST(s.product_id AS String) = CAST(p.product_id AS String)
JOIN cortex_2_dimensions.dim_variant AS v ON CAST(p.product_id AS String) = CAST(v.product_id AS String)
WHERE v.inventory < 100
GROUP BY p.product_id, p.product_title, v.inventory
HAVING total_units_sold > 40
ORDER BY total_units_sold DESC
LIMIT 10
[2025-07-27T10:36:08.890Z] LOG: 💾 Saved query result: query_cli_1753612557759_isa16vq4i_2025-07-27T10-36-08-888Z.json (10 rows, 3KB)
[2025-07-27T10:36:08.890Z] LOG:    📁 Data saved to: /Users/abdulmannan/Desktop/Development/EcomAnalysisAgent/data/queries/query_cli_1753612557759_isa16vq4i_2025-07-27T10-36-08-888Z.json
[2025-07-27T10:36:08.890Z] LOG:    📊 Query returned: 10 rows
[2025-07-27T10:36:08.890Z] LOG: 🧠 Step 4: Generating analysis strategy...
[2025-07-27T10:36:08.891Z] LOG: 📊 Using representative sample: 10 rows from 10 total
[2025-07-27T10:36:08.891Z] LOG: 📝 Generating analysis strategy (attempt 1/2)...
[2025-07-27T10:36:19.000Z] LOG: 💾 Raw AI response saved to: /Users/abdulmannan/Desktop/Development/EcomAnalysisAgent/data/ai-responses/analysis-strategy_2025-07-27T10-36-18-997Z.json
[2025-07-27T10:36:19.076Z] LOG: ✅ Generated Python script passed validation
[2025-07-27T10:36:19.076Z] LOG: 🐍 Step 5: Executing Python analysis...
[2025-07-27T10:36:19.114Z] LOG: 🐍 Executing Python analysis script...
[2025-07-27T10:36:19.114Z] LOG: 📁 Script path: /Users/abdulmannan/Desktop/Development/EcomAnalysisAgent/data/scripts/analysis_cli_1753612557759_isa16vq4i_2025-07-27T10-36-19-076Z.py
[2025-07-27T10:36:19.114Z] LOG: 📂 Output directory: /Users/abdulmannan/Desktop/Development/EcomAnalysisAgent/data/analysis/session_cli_1753612557759_isa16vq4i_2025-07-27T10-36-19-076Z
[2025-07-27T10:36:19.114Z] LOG: 📝 Starting Python script execution...
[2025-07-27T10:36:20.359Z] LOG: 🐍 Python: Loaded 10 rows with columns: ['p.product_id', 'product_title', 'v.inventory', 'total_units_sold']
[2025-07-27T10:36:20.359Z] LOG: 🐍 Python: Top 10 products to restock saved to /Users/abdulmannan/Desktop/Development/EcomAnalysisAgent/data/analysis/session_cli_1753612557759_isa16vq4i_2025-07-27T10-36-19-076Z/top_10_products_to_restock.csv
[2025-07-27T10:36:20.359Z] LOG: 🐍 Python: Analysis completed successfully!
[2025-07-27T10:36:20.457Z] LOG: Python script exited with code 0
[2025-07-27T10:36:20.458Z] LOG: 📊 Step 6: Compiling final response...